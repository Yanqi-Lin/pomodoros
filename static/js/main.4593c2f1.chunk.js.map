{"version":3,"sources":["components/Pomodoros/CountDown.js","redux/constant.js","components/Pomodoros/Timer.js","redux/actions.js","components/Pomodoros/Pomodoros.js","App.js","reportWebVitals.js","utils/soundElementFunc.js","redux/timerReducer.js","redux/store.js","index.js"],"names":["CountDown","props","mins","Math","floor","current","secs","showNum","num","display","activeValue","isSession","session","break","percent","id","type","format","START_STOP","RESET","JUMP","BREAK_DECREMENT","BREAK_INCREMENT","SESSION_DECREMENT","SESSION_INCREMENT","COUNTDOWN","BEEP","mapDispatchToProps","startStopAction","countDownAction","jumpAction","resetAction","breakDcrementAction","breakIncrementAction","sessionDecrementAction","sessionIncrementAction","connect","state","useEffect","isRunning","console","log","setTimeout","className","gutter","span","justify","onClick","shape","size","icon","UpOutlined","DownOutlined","src","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","RedoOutlined","Pomodoros","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","playSoundElement","document","getElementById","play","resetSoundElement","element","pause","currentTime","INITIAL_STATE","store","createStore","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4593c2f1.chunk.js","sourcesContent":["import { Progress } from 'antd';\nimport './CountDown.css';\n\nfunction CountDown(props) {\n    //换算剩余时间\n    const mins = Math.floor(props.current / 60);\n    const secs = props.current - mins * 60;\n    //显示剩余时间\n    function showNum(num) {\n        return num < 10 ? '0' + num : num;\n    }\n    const display = showNum(mins) + ':' + showNum(secs);\n\n    const activeValue = props.isSession ? props.session : props.break;\n    const percent = (1 - props.current / 60 / activeValue) * 100;\n\n    return (\n        <div id=\"time-left\" >\n            <Progress\n                type=\"circle\"\n                percent={percent}\n                format={() => display}\n            // strokeColor=\"#37a9ffd9\"\n            />\n        </div>\n    )\n}\n\nexport default CountDown;","export const START_STOP = 'START_STOP';\nexport const RESET = 'RESET';\nexport const JUMP = 'JUMP';\nexport const BREAK_DECREMENT = 'BREAK_DECREMENT';\nexport const BREAK_INCREMENT = 'BREAK_INCREMENT';\nexport const SESSION_DECREMENT = 'SESSION_DECREMENT';\nexport const SESSION_INCREMENT = 'SESSION_INCREMENT';\nexport const COUNTDOWN = 'COUNTDOWN';\nexport const BEEP = 'beep';","import React, { useEffect } from 'react';\nimport { Card, Row, Col, Button } from 'antd';\nimport {\n    DownOutlined,\n    UpOutlined,\n    RedoOutlined,\n    PlayCircleOutlined,\n    PauseOutlined,\n    StepForwardOutlined,\n} from '@ant-design/icons';\nimport CountDown from \"./CountDown\";\nimport './Timer.css';\nimport { connect } from 'react-redux';\nimport {\n    startStopAction,\n    jumpAction,\n    countDownAction,\n    resetAction,\n    breakDcrementAction,\n    breakIncrementAction,\n    sessionDecrementAction,\n    sessionIncrementAction,\n} from '../../redux/actions';\n\nfunction Timer(props) {\n\n    useEffect(() => {\n        const timeOut = () => {\n            console.log(1);\n            return setTimeout(() => props.countDownAction(), 1000);\n        }\n        if (props.isRunning) {\n            timeOut()\n        }\n    })\n\n    return (\n        <Card className='mainCard'>\n            <Row gutter={[16, 20]}>\n                <Col span={12}>\n                    <Row justify={'center'}>\n                        <div id='break-label'>\n                            Break Length\n                        </div>\n                    </Row>\n                    <Row justify={'space-around'} >\n                        <Button\n                            id='break-increment'\n                            onClick={() => props.breakIncrementAction()}\n                            shape=\"round\"\n                            size=\"small\"\n                            icon={<UpOutlined />}\n                        />\n\n                        <div id='break-length' className='count-num'>\n                            {props.break}\n                        </div>\n                        <Button\n                            id='break-decrement'\n                            onClick={() => props.breakDcrementAction()}\n                            shape=\"round\"\n                            size=\"small\"\n                            icon={<DownOutlined />}\n                        />\n                    </Row>\n                </Col>\n                <Col span={12}>\n                    <Row justify={'center'}>\n                        <div id='session-label'>\n                            Session Length\n                        </div>\n                    </Row>\n                    <Row justify={\"space-around\"} >\n                        <Button\n                            id='session-increment'\n                            onClick={() => props.sessionIncrementAction()}\n                            shape=\"round\"\n                            size=\"small\"\n                            icon={<UpOutlined />}\n                        />\n                        <div id='session-length' className='count-num'>\n                            {props.session}\n                        </div>\n                        <Button\n                            id='session-decrement'\n                            onClick={() => props.sessionDecrementAction()}\n                            shape=\"round\"\n                            size=\"small\"\n                            icon={<DownOutlined />}\n                        />\n                    </Row>\n                </Col>\n            </Row>\n            <Row justify={\"center\"} gutter={[16, 24]}>\n                <div id='timer-label'>\n                    {props.isSession ? 'Start working !' : 'Have a Break !'}\n                </div>\n            </Row>\n            <Row justify={\"center\"} gutter={[16, 24]}>\n                <CountDown\n                    current={props.current}\n                    isSession={props.isSession}\n                    session={props.session}\n                    break={props.break}\n                />\n            </Row>\n            <audio id='beep'>\n                <source src='https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav' type=\"audio/wav\" />\n                <source src='%PUBLIC_URL%/build_testable-projects-fcc_audio_BeepSound.wav' type=\"audio/wav\" />\n            </audio>\n            <Row justify={\"space-around\"} gutter={[16, 24]}>\n                <Button\n                    id='start_stop'\n                    onClick={() => props.startStopAction()}\n                    shape=\"round\"\n                    icon={props.isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n                />\n                <Button\n                    id='jump'\n                    onClick={() => props.jumpAction()}\n                    shape=\"round\"\n                    icon={<StepForwardOutlined />}\n                />\n                <Button\n                    id='reset'\n                    onClick={() => props.resetAction()}\n                    shape=\"round\"\n                    icon={<RedoOutlined />}\n                />\n            </Row>\n        </Card>\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = {\n    startStopAction,\n    countDownAction,\n    jumpAction,\n    resetAction,\n    breakDcrementAction,\n    breakIncrementAction,\n    sessionDecrementAction,\n    sessionIncrementAction,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)","import {\n    START_STOP,\n    COUNTDOWN,\n    JUMP,\n    RESET,\n    BREAK_DECREMENT,\n    BREAK_INCREMENT,\n    SESSION_DECREMENT,\n    SESSION_INCREMENT,\n} from './constant';\n\nexport const startStopAction = () => {\n\n    return {\n        type: START_STOP,\n    }\n}\n\nexport const countDownAction = () => {\n    return {\n        type: COUNTDOWN,\n    }\n}\n\nexport const jumpAction = () => {\n    return {\n        type: JUMP,\n    }\n}\n\nexport const resetAction = () => {\n    return {\n        type: RESET,\n    }\n}\n\nexport const breakDcrementAction = () => {\n    return {\n        type: BREAK_DECREMENT,\n\n    }\n}\n\nexport const breakIncrementAction = () => {\n    return {\n        type: BREAK_INCREMENT,\n\n    }\n}\n\nexport const sessionDecrementAction = () => {\n    return {\n        type: SESSION_DECREMENT,\n\n    }\n}\n\nexport const sessionIncrementAction = () => {\n    return {\n        type: SESSION_INCREMENT,\n    }\n}","import './Pomodoros.css';\nimport Timer from './Timer';\n\n\nfunction Pomodoros() {\n  return (\n    <div className=\"Pomodoros\">\n      <Timer />\n    </div>\n  );\n}\n\nexport default Pomodoros;\n","import './App.css';\nimport Pomodoros from './components/Pomodoros/Pomodoros';\n\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Pomodoros />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const playSoundElement = (id) => {\n    const element = document.getElementById(id);\n    element.play();\n}\n\n\nexport const resetSoundElement = (id) => {\n    const element = document.getElementById(id);\n    element.pause();\n    element.currentTime = 0;\n}\n","import {\n    START_STOP,\n    COUNTDOWN,\n    JUMP,\n    RESET,\n    BREAK_DECREMENT,\n    BREAK_INCREMENT,\n    SESSION_DECREMENT,\n    SESSION_INCREMENT,\n    BEEP,\n} from './constant';\nimport {\n    playSoundElement,\n    resetSoundElement\n} from '../utils/soundElementFunc';\n\nconst INITIAL_STATE = {\n    break: 5,\n    session: 25,\n    current: 25 * 60,\n    isRunning: false,\n    isSession: true,\n}\n\nexport default function timerReducer(state = INITIAL_STATE, action) {\n\n    switch (action.type) {\n        case COUNTDOWN:\n            if (state.isRunning) {\n                if (state.current < 1 && state.isSession) {\n                    playSoundElement(BEEP);\n                    return {\n                        ...state,\n                        current: state.break * 60,\n                        isSession: false,\n                    }\n                }\n                if (state.current < 1 && !state.isSession) {\n                    playSoundElement(BEEP);\n                    return {\n                        ...state,\n                        current: state.session * 60,\n                        isSession: true,\n                    }\n                }\n                return {\n                    ...state,\n                    current: state.current - 1\n                }\n            }\n            return state;\n        case START_STOP:\n            return {\n                ...state,\n                isRunning: !state.isRunning\n            };\n        case JUMP:\n            resetSoundElement(BEEP);\n            if (state.isRunning) {\n                if (state.session) {\n                    return {\n                    ...state,\n                    isRunning: false,\n                    current: state.break * 60,\n                    isSession: false\n                    }\n                } \n                if (state.session) {\n                    return {\n                    ...state,\n                    isRunning: false,\n                    current: state.session * 60,\n                    isSession: true\n                    }\n                }\n            }\n            return state;\n        case RESET:\n            resetSoundElement(BEEP);\n            return INITIAL_STATE;\n        case BREAK_DECREMENT:\n            if (!state.isRunning && state.break > 1) {\n                return {\n                    ...state,\n                    break: state.break - 1\n                }\n            }\n            return state;\n        case BREAK_INCREMENT:\n            if (!state.isRunning && state.break < 60) {\n                return {\n                    ...state,\n                    break: state.break + 1\n                }\n            }\n            return state;\n        case SESSION_DECREMENT:\n            if (!state.isRunning && state.session > 1) {\n                return {\n                    ...state,\n                    session: state.session - 1,\n                    current: (state.session - 1) * 60\n                }\n            }\n            return state;\n        case SESSION_INCREMENT:\n            if (!state.isRunning && state.session < 60) {\n                return {\n                    ...state,\n                    session: state.session + 1,\n                    current: (state.session + 1) * 60\n                }\n            }\n            return state;\n        default:\n            return state;\n    }\n}","import { createStore } from \"redux\";\nimport timerReducer from \"./timerReducer\";\n\nexport const store = createStore(timerReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}